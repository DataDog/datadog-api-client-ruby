=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://openapi-generator.tech

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'spec_helper'
require 'json'

# Unit tests for DatadogAPIClient::V2::RolesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RolesApi' do
  before do
    # run before each test
    @api_instance = DatadogAPIClient::V2::RolesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RolesApi' do
    it 'should create an instance of RolesApi' do
      expect(@api_instance).to be_instance_of(DatadogAPIClient::V2::RolesApi)
    end
  end

  # unit tests for add_permission_to_role
  # Grant permission to a role
  # Adds a permission to a role.
  # @param role_id The ID of the role.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [PermissionsResponse]
  describe 'add_permission_to_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_user_to_role
  # Add a user to a role
  # Adds a user to a role.
  # @param role_id The ID of the role.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [UsersResponse]
  describe 'add_user_to_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_role
  # Create role
  # Create a new role for your organization.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RoleCreateResponse]
  describe 'create_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_role
  # Delete role
  # Disables a role.
  # @param role_id The ID of the role.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_role
  # Get a role
  # Get a role in the organization specified by the roleâ€™s &#x60;role_id&#x60;.
  # @param role_id The ID of the role.
  # @param [Hash] opts the optional parameters
  # @return [RoleResponse]
  describe 'get_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_permissions
  # List permissions
  # Returns a list of all permissions, including name, description, and ID.
  # @param [Hash] opts the optional parameters
  # @return [PermissionsResponse]
  describe 'list_permissions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_role_permissions
  # List permissions for a role
  # Returns a list of all permissions for a single role.
  # @param role_id The ID of the role.
  # @param [Hash] opts the optional parameters
  # @return [PermissionsResponse]
  describe 'list_role_permissions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_role_users
  # Get all users of a role
  # Gets all users of a role.
  # @param role_id The ID of the role.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size Size for a given page.
  # @option opts [Integer] :page_number Specific page number to return.
  # @option opts [String] :sort User attribute to order results by. Sort order is **ascending** by default. Sort order is **descending** if the field is prefixed by a negative sign, for example &#x60;sort&#x3D;-name&#x60;. Options: &#x60;name&#x60;, &#x60;email&#x60;, &#x60;status&#x60;.
  # @option opts [String] :filter Filter all users by the given string. Defaults to no filtering.
  # @return [UsersResponse]
  describe 'list_role_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_roles
  # List roles
  # Returns all roles, including their names and IDs.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size Size for a given page.
  # @option opts [Integer] :page_number Specific page number to return.
  # @option opts [RolesSort] :sort Sort roles depending on the given field. Sort order is **ascending** by default. Sort order is **descending** if the field is prefixed by a negative sign, for example: &#x60;sort&#x3D;-name&#x60;.
  # @option opts [String] :filter Filter all roles by the given string.
  # @return [RolesResponse]
  describe 'list_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_permission_from_role
  # Revoke permission
  # Removes a permission from a role.
  # @param role_id The ID of the role.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [PermissionsResponse]
  describe 'remove_permission_from_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_user_from_role
  # Remove a user from a role
  # Removes a user from a role.
  # @param role_id The ID of the role.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [UsersResponse]
  describe 'remove_user_from_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_role
  # Update a role
  # Edit a role. Can only be used with application keys belonging to administrators.
  # @param role_id The ID of the role.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RoleUpdateResponse]
  describe 'update_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

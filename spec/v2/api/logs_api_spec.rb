=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://openapi-generator.tech

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'spec_helper'
require 'json'

# Unit tests for DatadogAPIClient::V2::LogsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LogsApi' do
  before do
    # run before each test
    @api_instance = DatadogAPIClient::V2::LogsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LogsApi' do
    it 'should create an instance of LogsApi' do
      expect(@api_instance).to be_instance_of(DatadogAPIClient::V2::LogsApi)
    end
  end

  # unit tests for aggregate_logs
  # Aggregate events
  # The API endpoint to aggregate events into buckets and compute metrics and timeseries.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [LogsAggregateResponse]
  describe 'aggregate_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_logs
  # Search logs
  # List endpoint returns logs that match a log search query. [Results are paginated][1].  Use this endpoint to build complex logs filtering and search.  **If you are considering archiving logs for your organization, consider use of the Datadog archive capabilities instead of the log list API. See [Datadog Logs Archive documentation][2].**  [1]: /logs/guide/collect-multiple-logs-with-pagination [2]: https://docs.datadoghq.com/logs/archives
  # @param [Hash] opts the optional parameters
  # @option opts [LogsListRequest] :body 
  # @return [LogsListResponse]
  describe 'list_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_logs_get
  # Get a list of logs
  # List endpoint returns logs that match a log search query. [Results are paginated][1].  Use this endpoint to see your latest logs.  **If you are considering archiving logs for your organization, consider use of the Datadog archive capabilities instead of the log list API. See [Datadog Logs Archive documentation][2].**  [1]: /logs/guide/collect-multiple-logs-with-pagination [2]: https://docs.datadoghq.com/logs/archives
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter_query Search query following logs syntax.
  # @option opts [String] :filter_index For customers with multiple indexes, the indexes to search Defaults to &#39;*&#39; which means all indexes
  # @option opts [Time] :filter_from Minimum timestamp for requested logs.
  # @option opts [Time] :filter_to Maximum timestamp for requested logs.
  # @option opts [LogsSort] :sort Order of logs in results.
  # @option opts [String] :page_cursor List following results with a cursor provided in the previous query.
  # @option opts [Integer] :page_limit Maximum number of logs in the response.
  # @return [LogsListResponse]
  describe 'list_logs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

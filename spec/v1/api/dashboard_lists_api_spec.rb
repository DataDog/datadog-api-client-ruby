=begin
#Datadog API V1 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://openapi-generator.tech

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'spec_helper'
require 'json'

# Unit tests for DatadogAPIClient::V1::DashboardListsAPI
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DashboardListsAPI' do
  before do
    # run before each test
    @api_instance = DatadogAPIClient::V1::DashboardListsAPI.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DashboardListsAPI' do
    it 'should create an instance of DashboardListsAPI' do
      expect(@api_instance).to be_instance_of(DatadogAPIClient::V1::DashboardListsAPI)
    end
  end

  # unit tests for create_dashboard_list
  # Create a dashboard list
  # Create an empty dashboard list.
  # @param body Create a dashboard list request body.
  # @param [Hash] opts the optional parameters
  # @return [DashboardList]
  describe 'create_dashboard_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_dashboard_list
  # Delete a dashboard list
  # Delete a dashboard list.
  # @param list_id ID of the dashboard list to delete.
  # @param [Hash] opts the optional parameters
  # @return [DashboardListDeleteResponse]
  describe 'delete_dashboard_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_dashboard_list
  # Get a dashboard list
  # Fetch an existing dashboard list&#39;s definition.
  # @param list_id ID of the dashboard list to fetch.
  # @param [Hash] opts the optional parameters
  # @return [DashboardList]
  describe 'get_dashboard_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_dashboard_lists
  # Get all dashboard lists
  # Fetch all of your existing dashboard list definitions.
  # @param [Hash] opts the optional parameters
  # @return [DashboardListListResponse]
  describe 'list_dashboard_lists test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_dashboard_list
  # Update a dashboard list
  # Update the name of a dashboard list.
  # @param list_id ID of the dashboard list to update.
  # @param body Update a dashboard list request body.
  # @param [Hash] opts the optional parameters
  # @return [DashboardList]
  describe 'update_dashboard_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

=begin
#Datadog API V1 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for DatadogAPIClient::V1::DashboardsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DashboardsApi' do
  before do
    # run before each test
    @api_instance = DatadogAPIClient::V1::DashboardsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DashboardsApi' do
    it 'should create an instance of DashboardsApi' do
      expect(@api_instance).to be_instance_of(DatadogAPIClient::V1::DashboardsApi)
    end
  end

  # unit tests for create_dashboard
  # Create a new dashboard
  # Create a dashboard using the specified options.
  # @param body Create a dashboard request body.
  # @param [Hash] opts the optional parameters
  # @return [Dashboard]
  describe 'create_dashboard test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_dashboard
  # Delete a dashboard
  # Delete a dashboard using the specified ID.
  # @param dashboard_id The ID of the dashboard.
  # @param [Hash] opts the optional parameters
  # @return [DashboardDeleteResponse]
  describe 'delete_dashboard test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_dashboard
  # Get a dashboard
  # Get a dashboard using the specified ID.
  # @param dashboard_id The ID of the dashboard.
  # @param [Hash] opts the optional parameters
  # @return [Dashboard]
  describe 'get_dashboard test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_dashboards
  # Get all dashboards
  # Get all dashboards.  **Note**: This query will only return custom created or cloned dashboards. This query will not return preset dashboards.
  # @param [Hash] opts the optional parameters
  # @return [DashboardSummary]
  describe 'list_dashboards test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_dashboard
  # Update a dashboard
  # Update a dashboard using the specified ID.
  # @param dashboard_id The ID of the dashboard.
  # @param body Update Dashboard request body.
  # @param [Hash] opts the optional parameters
  # @return [Dashboard]
  describe 'update_dashboard test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

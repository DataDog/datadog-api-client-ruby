=begin
#Datadog API V1 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://openapi-generator.tech

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'spec_helper'
require 'json'

# Unit tests for DatadogAPIClient::V1::DashboardsAPI
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DashboardsAPI' do
  before do
    # run before each test
    @api_instance = DatadogAPIClient::V1::DashboardsAPI.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DashboardsAPI' do
    it 'should create an instance of DashboardsAPI' do
      expect(@api_instance).to be_instance_of(DatadogAPIClient::V1::DashboardsAPI)
    end
  end

  # unit tests for create_dashboard
  # Create a new dashboard
  # Create a dashboard using the specified options. When defining queries in your widgets, take note of which queries should have the &#x60;as_count()&#x60; or &#x60;as_rate()&#x60; modifiers appended. Refer to the following [documentation](https://docs.datadoghq.com/developers/metrics/type_modifiers/?tab&#x3D;count#in-application-modifiers) for more information on these modifiers.
  # @param body Create a dashboard request body.
  # @param [Hash] opts the optional parameters
  # @return [Dashboard]
  describe 'create_dashboard test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_dashboard
  # Delete a dashboard
  # Delete a dashboard using the specified ID.
  # @param dashboard_id The ID of the dashboard.
  # @param [Hash] opts the optional parameters
  # @return [DashboardDeleteResponse]
  describe 'delete_dashboard test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_dashboards
  # Delete dashboards
  # Delete dashboards using the specified IDs. If there are any failures, no dashboards will be deleted (partial success is not allowed).
  # @param body Delete dashboards request body.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_dashboards test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_dashboard
  # Get a dashboard
  # Get a dashboard using the specified ID.
  # @param dashboard_id The ID of the dashboard.
  # @param [Hash] opts the optional parameters
  # @return [Dashboard]
  describe 'get_dashboard test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_dashboards
  # Get all dashboards
  # Get all dashboards.  **Note**: This query will only return custom created or cloned dashboards. This query will not return preset dashboards.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :filter_shared When &#x60;true&#x60;, this query only returns shared custom created or cloned dashboards.
  # @return [DashboardSummary]
  describe 'list_dashboards test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restore_dashboards
  # Restore deleted dashboards
  # Restore dashboards using the specified IDs. If there are any failures, no dashboards will be restored (partial success is not allowed).
  # @param body Restore dashboards request body.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'restore_dashboards test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_dashboard
  # Update a dashboard
  # Update a dashboard using the specified ID.
  # @param dashboard_id The ID of the dashboard.
  # @param body Update Dashboard request body.
  # @param [Hash] opts the optional parameters
  # @return [Dashboard]
  describe 'update_dashboard test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

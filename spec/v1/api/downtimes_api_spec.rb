=begin
#Datadog API V1 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for DatadogAPIClient::V1::DowntimesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DowntimesApi' do
  before(:example) do
    # run before each test
    @api = DatadogAPIClient::V1::DowntimesApi.new @api_client
    @undo = Array.new
  end

  after(:example) do
    # run after each test
    @undo.reverse_each do |proc|
      begin
        proc.call
      rescue DatadogAPIClient::V1::ApiError => e
        puts "Error undoing operation, it was probably already undone during the test: #{e.message}"
      end
    end
  end

  describe "create and update downtime" do
    it "works correctly with nullables" do
      end_time = Time.now.to_i + 60
      downtime = DatadogAPIClient::V1::Downtime.new({
        "message": "test message",
        "_end": end_time,
        "monitor_tags": ["foo:bar"],
        "scope": ["*"],
      })

      resp = @api.create_downtime(downtime)
      expect(resp.message).to eq("test message")
      expect(resp._end).to eq(end_time)
      expect(resp.monitor_tags).to eq(["foo:bar"])
      expect(resp.scope).to eq(["*"])
      expect(resp.parent_id).to be_nil

      updated_downtime = DatadogAPIClient::V1::Downtime.new({
        "message": nil, # Not nullable so not passed to API and not modified
        "_end": nil, # Nullable so passed to API and modified
      })

      resp = @api.update_downtime(resp.id, updated_downtime)
      expect(resp.message).to eq("test message")
      expect(resp._end).to be_nil
      expect(resp.monitor_tags).to eq(["foo:bar"])
      expect(resp.scope).to eq(["*"])
      expect(resp.parent_id).to be_nil
    end
  end
end

=begin
#Datadog API V1 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://openapi-generator.tech

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'spec_helper'
require 'json'

# Unit tests for DatadogAPIClient::V1::DowntimesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DowntimesApi' do
  before do
    # run before each test
    @api_instance = DatadogAPIClient::V1::DowntimesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DowntimesApi' do
    it 'should create an instance of DowntimesApi' do
      expect(@api_instance).to be_instance_of(DatadogAPIClient::V1::DowntimesApi)
    end
  end

  # unit tests for cancel_downtime
  # Cancel a downtime
  # Cancel a downtime.
  # @param downtime_id ID of the downtime to cancel.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'cancel_downtime test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_downtimes_by_scope
  # Cancel downtimes by scope
  # Delete all downtimes that match the scope of &#x60;X&#x60;.
  # @param body Scope to cancel downtimes for.
  # @param [Hash] opts the optional parameters
  # @return [CanceledDowntimesIds]
  describe 'cancel_downtimes_by_scope test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_downtime
  # Schedule a downtime
  # Schedule a downtime.
  # @param body Schedule a downtime request body.
  # @param [Hash] opts the optional parameters
  # @return [Downtime]
  describe 'create_downtime test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_downtime
  # Get a downtime
  # Get downtime detail by &#x60;downtime_id&#x60;.
  # @param downtime_id ID of the downtime to fetch.
  # @param [Hash] opts the optional parameters
  # @return [Downtime]
  describe 'get_downtime test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_downtimes
  # Get all downtimes
  # Get all scheduled downtimes.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :current_only Only return downtimes that are active when the request is made.
  # @return [Array<Downtime>]
  describe 'list_downtimes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_downtime
  # Update a downtime
  # Update a single downtime by &#x60;downtime_id&#x60;.
  # @param downtime_id ID of the downtime to update.
  # @param body Update a downtime request body.
  # @param [Hash] opts the optional parameters
  # @return [Downtime]
  describe 'update_downtime test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

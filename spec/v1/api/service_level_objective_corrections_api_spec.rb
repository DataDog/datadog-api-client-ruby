=begin
#Datadog API V1 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://openapi-generator.tech

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'spec_helper'
require 'json'

# Unit tests for DatadogAPIClient::V1::ServiceLevelObjectiveCorrectionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ServiceLevelObjectiveCorrectionsApi' do
  before do
    # run before each test
    @api_instance = DatadogAPIClient::V1::ServiceLevelObjectiveCorrectionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ServiceLevelObjectiveCorrectionsApi' do
    it 'should create an instance of ServiceLevelObjectiveCorrectionsApi' do
      expect(@api_instance).to be_instance_of(DatadogAPIClient::V1::ServiceLevelObjectiveCorrectionsApi)
    end
  end

  # unit tests for create_slo_correction
  # Create an SLO correction
  # Create an SLO Correction
  # @param body Create an SLO Correction
  # @param [Hash] opts the optional parameters
  # @return [SLOCorrectionResponse]
  describe 'create_slo_correction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_slo_correction
  # Delete an SLO Correction
  # Permanently delete the specified SLO Correction object
  # @param slo_correction_id The ID of the SLO correction object
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_slo_correction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_slo_correction
  # Get an SLO correction for an SLO
  # Get an SLO Correction
  # @param slo_correction_id The ID of the SLO correction object
  # @param [Hash] opts the optional parameters
  # @return [SLOCorrectionResponse]
  describe 'get_slo_correction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_slo_correction
  # Get all SLO corrections
  # Get all Service Level Objective Corrections
  # @param [Hash] opts the optional parameters
  # @return [SLOCorrectionListResponse]
  describe 'list_slo_correction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_slo_correction
  # Update an SLO Correction
  # Update the specified SLO correction object object
  # @param slo_correction_id The ID of the SLO correction object
  # @param body The edited SLO correction object.
  # @param [Hash] opts the optional parameters
  # @return [SLOCorrectionResponse]
  describe 'update_slo_correction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

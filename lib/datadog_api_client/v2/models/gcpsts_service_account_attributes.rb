=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # Attributes associated with your service account.
  class GCPSTSServiceAccountAttributes
    include BaseGenericModel

    # Tags to be associated with GCP metrics and service checks from your account.
    attr_accessor :account_tags

    # Silence monitors for expected GCE instance shutdowns.
    attr_accessor :automute

    # Your service account email address.
    attr_accessor :client_email

    # List of filters to limit the Cloud Run revisions that are pulled into Datadog by using tags.
    # Only Cloud Run revision resources that apply to specified filters are imported into Datadog.
    attr_accessor :cloud_run_revision_filters

    # Your Host Filters.
    attr_accessor :host_filters

    # When enabled, Datadog will activate the Cloud Security Monitoring product for this service account. Note: This requires resource_collection_enabled to be set to true.
    attr_accessor :is_cspm_enabled

    # When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account.
    attr_accessor :is_security_command_center_enabled

    # When enabled, Datadog scans for all resources in your GCP environment.
    attr_accessor :resource_collection_enabled

    attr_accessor :additional_properties

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'account_tags' => :'account_tags',
        :'automute' => :'automute',
        :'client_email' => :'client_email',
        :'cloud_run_revision_filters' => :'cloud_run_revision_filters',
        :'host_filters' => :'host_filters',
        :'is_cspm_enabled' => :'is_cspm_enabled',
        :'is_security_command_center_enabled' => :'is_security_command_center_enabled',
        :'resource_collection_enabled' => :'resource_collection_enabled'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'account_tags' => :'Array<String>',
        :'automute' => :'Boolean',
        :'client_email' => :'String',
        :'cloud_run_revision_filters' => :'Array<String>',
        :'host_filters' => :'Array<String>',
        :'is_cspm_enabled' => :'Boolean',
        :'is_security_command_center_enabled' => :'Boolean',
        :'resource_collection_enabled' => :'Boolean'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V2::GCPSTSServiceAccountAttributes` initialize method"
      end

      self.additional_properties = {}
      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          self.additional_properties[k.to_sym] = v
        else
          h[k.to_sym] = v
        end
      }

      if attributes.key?(:'account_tags')
        if (value = attributes[:'account_tags']).is_a?(Array)
          self.account_tags = value
        end
      end

      if attributes.key?(:'automute')
        self.automute = attributes[:'automute']
      end

      if attributes.key?(:'client_email')
        self.client_email = attributes[:'client_email']
      end

      if attributes.key?(:'cloud_run_revision_filters')
        if (value = attributes[:'cloud_run_revision_filters']).is_a?(Array)
          self.cloud_run_revision_filters = value
        end
      end

      if attributes.key?(:'host_filters')
        if (value = attributes[:'host_filters']).is_a?(Array)
          self.host_filters = value
        end
      end

      if attributes.key?(:'is_cspm_enabled')
        self.is_cspm_enabled = attributes[:'is_cspm_enabled']
      end

      if attributes.key?(:'is_security_command_center_enabled')
        self.is_security_command_center_enabled = attributes[:'is_security_command_center_enabled']
      end

      if attributes.key?(:'resource_collection_enabled')
        self.resource_collection_enabled = attributes[:'resource_collection_enabled']
      end
    end

    # Returns the object in the form of hash, with additionalProperties support.
    # @return [Hash] Returns the object in the form of hash
    # @!visibility private
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      self.additional_properties.each_pair do |attr, value|
        hash[attr] = value
      end
      hash
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          account_tags == o.account_tags &&
          automute == o.automute &&
          client_email == o.client_email &&
          cloud_run_revision_filters == o.cloud_run_revision_filters &&
          host_filters == o.host_filters &&
          is_cspm_enabled == o.is_cspm_enabled &&
          is_security_command_center_enabled == o.is_security_command_center_enabled &&
          resource_collection_enabled == o.resource_collection_enabled
          additional_properties == o.additional_properties
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [account_tags, automute, client_email, cloud_run_revision_filters, host_filters, is_cspm_enabled, is_security_command_center_enabled, resource_collection_enabled].hash
    end
  end
end

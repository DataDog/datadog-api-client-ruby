=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # The definition of `CreateTableRequestDataAttributesFileMetadataOneOfAccessDetailsGcpDetail` object.
  class CreateTableRequestDataAttributesFileMetadataOneOfAccessDetailsGcpDetail
    include BaseGenericModel
    # The relative file path from the GCS bucket root to the CSV file.
    attr_reader :file_path
    # The name of the GCP bucket.
    attr_reader :gcp_bucket_name
    # The ID of the GCP project.
    attr_reader :gcp_project_id
    # The email of the GCP service account.
    attr_reader :gcp_service_account_email

    attr_accessor :additional_properties

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'file_path' => :'file_path',
        :'gcp_bucket_name' => :'gcp_bucket_name',
        :'gcp_project_id' => :'gcp_project_id',
        :'gcp_service_account_email' => :'gcp_service_account_email'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'file_path' => :'String',
        :'gcp_bucket_name' => :'String',
        :'gcp_project_id' => :'String',
        :'gcp_service_account_email' => :'String'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V2::CreateTableRequestDataAttributesFileMetadataOneOfAccessDetailsGcpDetail` initialize method"
      end

      self.additional_properties = {}
      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          self.additional_properties[k.to_sym] = v
        else
          h[k.to_sym] = v
        end
      }

      if attributes.key?(:'file_path')
        self.file_path = attributes[:'file_path']
      end

      if attributes.key?(:'gcp_bucket_name')
        self.gcp_bucket_name = attributes[:'gcp_bucket_name']
      end

      if attributes.key?(:'gcp_project_id')
        self.gcp_project_id = attributes[:'gcp_project_id']
      end

      if attributes.key?(:'gcp_service_account_email')
        self.gcp_service_account_email = attributes[:'gcp_service_account_email']
      end
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    # @!visibility private
    def valid?
      return false if @file_path.nil?
      return false if @gcp_bucket_name.nil?
      return false if @gcp_project_id.nil?
      return false if @gcp_service_account_email.nil?
      true
    end

    # Custom attribute writer method with validation
    # @param file_path [Object] Object to be assigned
    # @!visibility private
    def file_path=(file_path)
      if file_path.nil?
        fail ArgumentError, 'invalid value for "file_path", file_path cannot be nil.'
      end
      @file_path = file_path
    end

    # Custom attribute writer method with validation
    # @param gcp_bucket_name [Object] Object to be assigned
    # @!visibility private
    def gcp_bucket_name=(gcp_bucket_name)
      if gcp_bucket_name.nil?
        fail ArgumentError, 'invalid value for "gcp_bucket_name", gcp_bucket_name cannot be nil.'
      end
      @gcp_bucket_name = gcp_bucket_name
    end

    # Custom attribute writer method with validation
    # @param gcp_project_id [Object] Object to be assigned
    # @!visibility private
    def gcp_project_id=(gcp_project_id)
      if gcp_project_id.nil?
        fail ArgumentError, 'invalid value for "gcp_project_id", gcp_project_id cannot be nil.'
      end
      @gcp_project_id = gcp_project_id
    end

    # Custom attribute writer method with validation
    # @param gcp_service_account_email [Object] Object to be assigned
    # @!visibility private
    def gcp_service_account_email=(gcp_service_account_email)
      if gcp_service_account_email.nil?
        fail ArgumentError, 'invalid value for "gcp_service_account_email", gcp_service_account_email cannot be nil.'
      end
      @gcp_service_account_email = gcp_service_account_email
    end

    # Returns the object in the form of hash, with additionalProperties support.
    # @return [Hash] Returns the object in the form of hash
    # @!visibility private
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      self.additional_properties.each_pair do |attr, value|
        hash[attr] = value
      end
      hash
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          file_path == o.file_path &&
          gcp_bucket_name == o.gcp_bucket_name &&
          gcp_project_id == o.gcp_project_id &&
          gcp_service_account_email == o.gcp_service_account_email &&
          additional_properties == o.additional_properties
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [file_path, gcp_bucket_name, gcp_project_id, gcp_service_account_email, additional_properties].hash
    end
  end
end

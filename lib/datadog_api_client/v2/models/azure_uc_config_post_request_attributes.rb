=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # Attributes for Azure config Post Request.
  class AzureUCConfigPostRequestAttributes
    include BaseGenericModel

    # The tenant ID of the azure account.
    attr_reader :account_id

    # Bill config.
    attr_reader :actual_bill_config

    # Bill config.
    attr_reader :amortized_bill_config

    # The client ID of the azure account.
    attr_reader :client_id

    # Whether or not the Cloud Cost Management account is enabled.
    attr_accessor :is_enabled

    # The scope of your observed subscription.
    attr_reader :scope

    attr_accessor :additional_properties

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'account_id' => :'account_id',
        :'actual_bill_config' => :'actual_bill_config',
        :'amortized_bill_config' => :'amortized_bill_config',
        :'client_id' => :'client_id',
        :'is_enabled' => :'is_enabled',
        :'scope' => :'scope'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'account_id' => :'String',
        :'actual_bill_config' => :'BillConfig',
        :'amortized_bill_config' => :'BillConfig',
        :'client_id' => :'String',
        :'is_enabled' => :'Boolean',
        :'scope' => :'String'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V2::AzureUCConfigPostRequestAttributes` initialize method"
      end

      self.additional_properties = {}
      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          self.additional_properties[k.to_sym] = v
        else
          h[k.to_sym] = v
        end
      }

      if attributes.key?(:'account_id')
        self.account_id = attributes[:'account_id']
      end

      if attributes.key?(:'actual_bill_config')
        self.actual_bill_config = attributes[:'actual_bill_config']
      end

      if attributes.key?(:'amortized_bill_config')
        self.amortized_bill_config = attributes[:'amortized_bill_config']
      end

      if attributes.key?(:'client_id')
        self.client_id = attributes[:'client_id']
      end

      if attributes.key?(:'is_enabled')
        self.is_enabled = attributes[:'is_enabled']
      end

      if attributes.key?(:'scope')
        self.scope = attributes[:'scope']
      end
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    # @!visibility private
    def valid?
      return false if @account_id.nil?
      return false if @actual_bill_config.nil?
      return false if @amortized_bill_config.nil?
      return false if @client_id.nil?
      return false if @scope.nil?
      true
    end

    # Custom attribute writer method with validation
    # @param account_id [Object] Object to be assigned
    # @!visibility private
    def account_id=(account_id)
      if account_id.nil?
        fail ArgumentError, 'invalid value for "account_id", account_id cannot be nil.'
      end
      @account_id = account_id
    end

    # Custom attribute writer method with validation
    # @param actual_bill_config [Object] Object to be assigned
    # @!visibility private
    def actual_bill_config=(actual_bill_config)
      if actual_bill_config.nil?
        fail ArgumentError, 'invalid value for "actual_bill_config", actual_bill_config cannot be nil.'
      end
      @actual_bill_config = actual_bill_config
    end

    # Custom attribute writer method with validation
    # @param amortized_bill_config [Object] Object to be assigned
    # @!visibility private
    def amortized_bill_config=(amortized_bill_config)
      if amortized_bill_config.nil?
        fail ArgumentError, 'invalid value for "amortized_bill_config", amortized_bill_config cannot be nil.'
      end
      @amortized_bill_config = amortized_bill_config
    end

    # Custom attribute writer method with validation
    # @param client_id [Object] Object to be assigned
    # @!visibility private
    def client_id=(client_id)
      if client_id.nil?
        fail ArgumentError, 'invalid value for "client_id", client_id cannot be nil.'
      end
      @client_id = client_id
    end

    # Custom attribute writer method with validation
    # @param scope [Object] Object to be assigned
    # @!visibility private
    def scope=(scope)
      if scope.nil?
        fail ArgumentError, 'invalid value for "scope", scope cannot be nil.'
      end
      @scope = scope
    end

    # Returns the object in the form of hash, with additionalProperties support.
    # @return [Hash] Returns the object in the form of hash
    # @!visibility private
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      self.additional_properties.each_pair do |attr, value|
        hash[attr] = value
      end
      hash
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          account_id == o.account_id &&
          actual_bill_config == o.actual_bill_config &&
          amortized_bill_config == o.amortized_bill_config &&
          client_id == o.client_id &&
          is_enabled == o.is_enabled &&
          scope == o.scope
          additional_properties == o.additional_properties
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [account_id, actual_bill_config, amortized_bill_config, client_id, is_enabled, scope].hash
    end
  end
end

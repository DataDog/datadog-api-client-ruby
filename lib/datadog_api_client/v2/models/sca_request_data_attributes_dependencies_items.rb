=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # The definition of `ScaRequestDataAttributesDependenciesItems` object.
  class ScaRequestDataAttributesDependenciesItems
    include BaseGenericModel

    # The `items` `exclusions`.
    attr_accessor :exclusions

    # The `items` `group`.
    attr_accessor :group

    # The `items` `is_dev`.
    attr_accessor :is_dev

    # The `items` `is_direct`.
    attr_accessor :is_direct

    # The `items` `language`.
    attr_accessor :language

    # The `items` `locations`.
    attr_accessor :locations

    # The `items` `name`.
    attr_accessor :name

    # The `items` `package_manager`.
    attr_accessor :package_manager

    # The `items` `purl`.
    attr_accessor :purl

    # The `items` `reachable_symbol_properties`.
    attr_accessor :reachable_symbol_properties

    # The `items` `version`.
    attr_accessor :version

    attr_accessor :additional_properties

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'exclusions' => :'exclusions',
        :'group' => :'group',
        :'is_dev' => :'is_dev',
        :'is_direct' => :'is_direct',
        :'language' => :'language',
        :'locations' => :'locations',
        :'name' => :'name',
        :'package_manager' => :'package_manager',
        :'purl' => :'purl',
        :'reachable_symbol_properties' => :'reachable_symbol_properties',
        :'version' => :'version'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'exclusions' => :'Array<String>',
        :'group' => :'String',
        :'is_dev' => :'Boolean',
        :'is_direct' => :'Boolean',
        :'language' => :'String',
        :'locations' => :'Array<ScaRequestDataAttributesDependenciesItemsLocationsItems>',
        :'name' => :'String',
        :'package_manager' => :'String',
        :'purl' => :'String',
        :'reachable_symbol_properties' => :'Array<ScaRequestDataAttributesDependenciesItemsReachableSymbolPropertiesItems>',
        :'version' => :'String'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V2::ScaRequestDataAttributesDependenciesItems` initialize method"
      end

      self.additional_properties = {}
      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          self.additional_properties[k.to_sym] = v
        else
          h[k.to_sym] = v
        end
      }

      if attributes.key?(:'exclusions')
        if (value = attributes[:'exclusions']).is_a?(Array)
          self.exclusions = value
        end
      end

      if attributes.key?(:'group')
        self.group = attributes[:'group']
      end

      if attributes.key?(:'is_dev')
        self.is_dev = attributes[:'is_dev']
      end

      if attributes.key?(:'is_direct')
        self.is_direct = attributes[:'is_direct']
      end

      if attributes.key?(:'language')
        self.language = attributes[:'language']
      end

      if attributes.key?(:'locations')
        if (value = attributes[:'locations']).is_a?(Array)
          self.locations = value
        end
      end

      if attributes.key?(:'name')
        self.name = attributes[:'name']
      end

      if attributes.key?(:'package_manager')
        self.package_manager = attributes[:'package_manager']
      end

      if attributes.key?(:'purl')
        self.purl = attributes[:'purl']
      end

      if attributes.key?(:'reachable_symbol_properties')
        if (value = attributes[:'reachable_symbol_properties']).is_a?(Array)
          self.reachable_symbol_properties = value
        end
      end

      if attributes.key?(:'version')
        self.version = attributes[:'version']
      end
    end

    # Returns the object in the form of hash, with additionalProperties support.
    # @return [Hash] Returns the object in the form of hash
    # @!visibility private
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      self.additional_properties.each_pair do |attr, value|
        hash[attr] = value
      end
      hash
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          exclusions == o.exclusions &&
          group == o.group &&
          is_dev == o.is_dev &&
          is_direct == o.is_direct &&
          language == o.language &&
          locations == o.locations &&
          name == o.name &&
          package_manager == o.package_manager &&
          purl == o.purl &&
          reachable_symbol_properties == o.reachable_symbol_properties &&
          version == o.version &&
          additional_properties == o.additional_properties
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [exclusions, group, is_dev, is_direct, language, locations, name, package_manager, purl, reachable_symbol_properties, version, additional_properties].hash
    end
  end
end

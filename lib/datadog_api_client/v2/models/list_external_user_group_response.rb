=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # List SCIM groups response object.
  class ListExternalUserGroupResponse
    include BaseGenericModel

    # List of SCIM groups matching the request criteria.
    attr_accessor :resources

    # Number of SCIM groups returned per page.
    attr_reader :items_per_page

    # List response JSON Schemas.
    attr_accessor :schemas

    # Starting index of the SCIM groups for this page (1-indexed).
    attr_reader :start_index

    # Total number of SCIM groups matching the request criteria.
    attr_reader :total_results

    attr_accessor :additional_properties

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'resources' => :'Resources',
        :'items_per_page' => :'itemsPerPage',
        :'schemas' => :'schemas',
        :'start_index' => :'startIndex',
        :'total_results' => :'totalResults'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'resources' => :'Array<ListExternalUserGroupResponseResourcesItems>',
        :'items_per_page' => :'Integer',
        :'schemas' => :'Array<String>',
        :'start_index' => :'Integer',
        :'total_results' => :'Integer'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V2::ListExternalUserGroupResponse` initialize method"
      end

      self.additional_properties = {}
      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          self.additional_properties[k.to_sym] = v
        else
          h[k.to_sym] = v
        end
      }

      if attributes.key?(:'resources')
        if (value = attributes[:'resources']).is_a?(Array)
          self.resources = value
        end
      end

      if attributes.key?(:'items_per_page')
        self.items_per_page = attributes[:'items_per_page']
      end

      if attributes.key?(:'schemas')
        if (value = attributes[:'schemas']).is_a?(Array)
          self.schemas = value
        end
      end

      if attributes.key?(:'start_index')
        self.start_index = attributes[:'start_index']
      end

      if attributes.key?(:'total_results')
        self.total_results = attributes[:'total_results']
      end
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    # @!visibility private
    def valid?
      return false if !@items_per_page.nil? && @items_per_page > 4294967295
      return false if !@items_per_page.nil? && @items_per_page < 0
      return false if !@start_index.nil? && @start_index > 4294967295
      return false if !@start_index.nil? && @start_index < 0
      return false if !@total_results.nil? && @total_results > 4294967295
      return false if !@total_results.nil? && @total_results < 0
      true
    end

    # Custom attribute writer method with validation
    # @param items_per_page [Object] Object to be assigned
    # @!visibility private
    def items_per_page=(items_per_page)
      if !items_per_page.nil? && items_per_page > 4294967295
        fail ArgumentError, 'invalid value for "items_per_page", must be smaller than or equal to 4294967295.'
      end
      if !items_per_page.nil? && items_per_page < 0
        fail ArgumentError, 'invalid value for "items_per_page", must be greater than or equal to 0.'
      end
      @items_per_page = items_per_page
    end

    # Custom attribute writer method with validation
    # @param start_index [Object] Object to be assigned
    # @!visibility private
    def start_index=(start_index)
      if !start_index.nil? && start_index > 4294967295
        fail ArgumentError, 'invalid value for "start_index", must be smaller than or equal to 4294967295.'
      end
      if !start_index.nil? && start_index < 0
        fail ArgumentError, 'invalid value for "start_index", must be greater than or equal to 0.'
      end
      @start_index = start_index
    end

    # Custom attribute writer method with validation
    # @param total_results [Object] Object to be assigned
    # @!visibility private
    def total_results=(total_results)
      if !total_results.nil? && total_results > 4294967295
        fail ArgumentError, 'invalid value for "total_results", must be smaller than or equal to 4294967295.'
      end
      if !total_results.nil? && total_results < 0
        fail ArgumentError, 'invalid value for "total_results", must be greater than or equal to 0.'
      end
      @total_results = total_results
    end

    # Returns the object in the form of hash, with additionalProperties support.
    # @return [Hash] Returns the object in the form of hash
    # @!visibility private
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      self.additional_properties.each_pair do |attr, value|
        hash[attr] = value
      end
      hash
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          resources == o.resources &&
          items_per_page == o.items_per_page &&
          schemas == o.schemas &&
          start_index == o.start_index &&
          total_results == o.total_results
          additional_properties == o.additional_properties
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [resources, items_per_page, schemas, start_index, total_results].hash
    end
  end
end

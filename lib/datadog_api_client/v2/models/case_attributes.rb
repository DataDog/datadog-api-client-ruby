=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # Case attributes
  class CaseAttributes
    include BaseGenericModel

    # Timestamp of when the case was archived
    attr_accessor :archived_at

    # Timestamp of when the case was closed
    attr_accessor :closed_at

    # Timestamp of when the case was created
    attr_accessor :created_at

    # Description
    attr_accessor :description

    # Jira issue attached to case
    attr_accessor :jira_issue

    # Key
    attr_accessor :key

    # Timestamp of when the case was last modified
    attr_accessor :modified_at

    # Case priority
    attr_accessor :priority

    # ServiceNow ticket attached to case
    attr_accessor :service_now_ticket

    # Case status
    attr_accessor :status

    # Title
    attr_accessor :title

    # Case type
    attr_accessor :type

    attr_accessor :additional_properties

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'archived_at' => :'archived_at',
        :'closed_at' => :'closed_at',
        :'created_at' => :'created_at',
        :'description' => :'description',
        :'jira_issue' => :'jira_issue',
        :'key' => :'key',
        :'modified_at' => :'modified_at',
        :'priority' => :'priority',
        :'service_now_ticket' => :'service_now_ticket',
        :'status' => :'status',
        :'title' => :'title',
        :'type' => :'type'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'archived_at' => :'Time',
        :'closed_at' => :'Time',
        :'created_at' => :'Time',
        :'description' => :'String',
        :'jira_issue' => :'JiraIssue',
        :'key' => :'String',
        :'modified_at' => :'Time',
        :'priority' => :'CasePriority',
        :'service_now_ticket' => :'ServiceNowTicket',
        :'status' => :'CaseStatus',
        :'title' => :'String',
        :'type' => :'CaseType'
      }
    end

    # List of attributes with nullable: true
    # @!visibility private
    def self.openapi_nullable
      Set.new([
        :'archived_at',
        :'closed_at',
        :'jira_issue',
        :'modified_at',
        :'service_now_ticket',
      ])
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V2::CaseAttributes` initialize method"
      end

      self.additional_properties = {}
      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          self.additional_properties[k.to_sym] = v
        else
          h[k.to_sym] = v
        end
      }

      if attributes.key?(:'archived_at')
        self.archived_at = attributes[:'archived_at']
      end

      if attributes.key?(:'closed_at')
        self.closed_at = attributes[:'closed_at']
      end

      if attributes.key?(:'created_at')
        self.created_at = attributes[:'created_at']
      end

      if attributes.key?(:'description')
        self.description = attributes[:'description']
      end

      if attributes.key?(:'jira_issue')
        self.jira_issue = attributes[:'jira_issue']
      end

      if attributes.key?(:'key')
        self.key = attributes[:'key']
      end

      if attributes.key?(:'modified_at')
        self.modified_at = attributes[:'modified_at']
      end

      if attributes.key?(:'priority')
        self.priority = attributes[:'priority']
      end

      if attributes.key?(:'service_now_ticket')
        self.service_now_ticket = attributes[:'service_now_ticket']
      end

      if attributes.key?(:'status')
        self.status = attributes[:'status']
      end

      if attributes.key?(:'title')
        self.title = attributes[:'title']
      end

      if attributes.key?(:'type')
        self.type = attributes[:'type']
      end
    end

    # Returns the object in the form of hash, with additionalProperties support.
    # @return [Hash] Returns the object in the form of hash
    # @!visibility private
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      self.additional_properties.each_pair do |attr, value|
        hash[attr] = value
      end
      hash
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          archived_at == o.archived_at &&
          closed_at == o.closed_at &&
          created_at == o.created_at &&
          description == o.description &&
          jira_issue == o.jira_issue &&
          key == o.key &&
          modified_at == o.modified_at &&
          priority == o.priority &&
          service_now_ticket == o.service_now_ticket &&
          status == o.status &&
          title == o.title &&
          type == o.type
          additional_properties == o.additional_properties
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [archived_at, closed_at, created_at, description, jira_issue, key, modified_at, priority, service_now_ticket, status, title, type].hash
    end
  end
end

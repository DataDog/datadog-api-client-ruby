=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # The definition of the Azure access details object.
  class CreateTableRequestDataAttributesFileMetadataOneOfAccessDetailsAzureDetail
    include BaseGenericModel

    # The Azure client ID.
    attr_reader :azure_client_id

    # The name of the Azure container.
    attr_reader :azure_container_name

    # The name of the Azure storage account.
    attr_reader :azure_storage_account_name

    # The ID of the Azure tenant.
    attr_reader :azure_tenant_id

    # The relative file path from the Azure container root to the CSV file.
    attr_reader :file_path

    attr_accessor :additional_properties

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'azure_client_id' => :'azure_client_id',
        :'azure_container_name' => :'azure_container_name',
        :'azure_storage_account_name' => :'azure_storage_account_name',
        :'azure_tenant_id' => :'azure_tenant_id',
        :'file_path' => :'file_path'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'azure_client_id' => :'String',
        :'azure_container_name' => :'String',
        :'azure_storage_account_name' => :'String',
        :'azure_tenant_id' => :'String',
        :'file_path' => :'String'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V2::CreateTableRequestDataAttributesFileMetadataOneOfAccessDetailsAzureDetail` initialize method"
      end

      self.additional_properties = {}
      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          self.additional_properties[k.to_sym] = v
        else
          h[k.to_sym] = v
        end
      }

      if attributes.key?(:'azure_client_id')
        self.azure_client_id = attributes[:'azure_client_id']
      end

      if attributes.key?(:'azure_container_name')
        self.azure_container_name = attributes[:'azure_container_name']
      end

      if attributes.key?(:'azure_storage_account_name')
        self.azure_storage_account_name = attributes[:'azure_storage_account_name']
      end

      if attributes.key?(:'azure_tenant_id')
        self.azure_tenant_id = attributes[:'azure_tenant_id']
      end

      if attributes.key?(:'file_path')
        self.file_path = attributes[:'file_path']
      end
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    # @!visibility private
    def valid?
      return false if @azure_client_id.nil?
      return false if @azure_container_name.nil?
      return false if @azure_storage_account_name.nil?
      return false if @azure_tenant_id.nil?
      return false if @file_path.nil?
      true
    end

    # Custom attribute writer method with validation
    # @param azure_client_id [Object] Object to be assigned
    # @!visibility private
    def azure_client_id=(azure_client_id)
      if azure_client_id.nil?
        fail ArgumentError, 'invalid value for "azure_client_id", azure_client_id cannot be nil.'
      end
      @azure_client_id = azure_client_id
    end

    # Custom attribute writer method with validation
    # @param azure_container_name [Object] Object to be assigned
    # @!visibility private
    def azure_container_name=(azure_container_name)
      if azure_container_name.nil?
        fail ArgumentError, 'invalid value for "azure_container_name", azure_container_name cannot be nil.'
      end
      @azure_container_name = azure_container_name
    end

    # Custom attribute writer method with validation
    # @param azure_storage_account_name [Object] Object to be assigned
    # @!visibility private
    def azure_storage_account_name=(azure_storage_account_name)
      if azure_storage_account_name.nil?
        fail ArgumentError, 'invalid value for "azure_storage_account_name", azure_storage_account_name cannot be nil.'
      end
      @azure_storage_account_name = azure_storage_account_name
    end

    # Custom attribute writer method with validation
    # @param azure_tenant_id [Object] Object to be assigned
    # @!visibility private
    def azure_tenant_id=(azure_tenant_id)
      if azure_tenant_id.nil?
        fail ArgumentError, 'invalid value for "azure_tenant_id", azure_tenant_id cannot be nil.'
      end
      @azure_tenant_id = azure_tenant_id
    end

    # Custom attribute writer method with validation
    # @param file_path [Object] Object to be assigned
    # @!visibility private
    def file_path=(file_path)
      if file_path.nil?
        fail ArgumentError, 'invalid value for "file_path", file_path cannot be nil.'
      end
      @file_path = file_path
    end

    # Returns the object in the form of hash, with additionalProperties support.
    # @return [Hash] Returns the object in the form of hash
    # @!visibility private
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      self.additional_properties.each_pair do |attr, value|
        hash[attr] = value
      end
      hash
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          azure_client_id == o.azure_client_id &&
          azure_container_name == o.azure_container_name &&
          azure_storage_account_name == o.azure_storage_account_name &&
          azure_tenant_id == o.azure_tenant_id &&
          file_path == o.file_path &&
          additional_properties == o.additional_properties
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [azure_client_id, azure_container_name, azure_storage_account_name, azure_tenant_id, file_path, additional_properties].hash
    end
  end
end

=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # 
  class SecretRuleDataAttributesMatchValidation
    include BaseGenericModel

    #
    attr_accessor :endpoint

    #
    attr_accessor :hosts

    #
    attr_accessor :http_method

    #
    attr_accessor :invalid_http_status_code

    #
    attr_accessor :request_headers

    #
    attr_reader :timeout_seconds

    #
    attr_accessor :type

    #
    attr_accessor :valid_http_status_code

    attr_accessor :additional_properties

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'endpoint' => :'endpoint',
        :'hosts' => :'hosts',
        :'http_method' => :'http_method',
        :'invalid_http_status_code' => :'invalid_http_status_code',
        :'request_headers' => :'request_headers',
        :'timeout_seconds' => :'timeout_seconds',
        :'type' => :'type',
        :'valid_http_status_code' => :'valid_http_status_code'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'endpoint' => :'String',
        :'hosts' => :'Array<String>',
        :'http_method' => :'String',
        :'invalid_http_status_code' => :'Array<SecretRuleDataAttributesMatchValidationInvalidHttpStatusCodeItems>',
        :'request_headers' => :'Hash<String, String>',
        :'timeout_seconds' => :'Integer',
        :'type' => :'String',
        :'valid_http_status_code' => :'Array<SecretRuleDataAttributesMatchValidationValidHttpStatusCodeItems>'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V2::SecretRuleDataAttributesMatchValidation` initialize method"
      end

      self.additional_properties = {}
      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          self.additional_properties[k.to_sym] = v
        else
          h[k.to_sym] = v
        end
      }

      if attributes.key?(:'endpoint')
        self.endpoint = attributes[:'endpoint']
      end

      if attributes.key?(:'hosts')
        if (value = attributes[:'hosts']).is_a?(Array)
          self.hosts = value
        end
      end

      if attributes.key?(:'http_method')
        self.http_method = attributes[:'http_method']
      end

      if attributes.key?(:'invalid_http_status_code')
        if (value = attributes[:'invalid_http_status_code']).is_a?(Array)
          self.invalid_http_status_code = value
        end
      end

      if attributes.key?(:'request_headers')
        self.request_headers = attributes[:'request_headers']
      end

      if attributes.key?(:'timeout_seconds')
        self.timeout_seconds = attributes[:'timeout_seconds']
      end

      if attributes.key?(:'type')
        self.type = attributes[:'type']
      end

      if attributes.key?(:'valid_http_status_code')
        if (value = attributes[:'valid_http_status_code']).is_a?(Array)
          self.valid_http_status_code = value
        end
      end
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    # @!visibility private
    def valid?
      return false if !@timeout_seconds.nil? && @timeout_seconds > 1.8446744073709552e+19
      return false if !@timeout_seconds.nil? && @timeout_seconds < 0
      true
    end

    # Custom attribute writer method with validation
    # @param timeout_seconds [Object] Object to be assigned
    # @!visibility private
    def timeout_seconds=(timeout_seconds)
      if !timeout_seconds.nil? && timeout_seconds > 1.8446744073709552e+19
        fail ArgumentError, 'invalid value for "timeout_seconds", must be smaller than or equal to 1.8446744073709552e+19.'
      end
      if !timeout_seconds.nil? && timeout_seconds < 0
        fail ArgumentError, 'invalid value for "timeout_seconds", must be greater than or equal to 0.'
      end
      @timeout_seconds = timeout_seconds
    end

    # Returns the object in the form of hash, with additionalProperties support.
    # @return [Hash] Returns the object in the form of hash
    # @!visibility private
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      self.additional_properties.each_pair do |attr, value|
        hash[attr] = value
      end
      hash
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          endpoint == o.endpoint &&
          hosts == o.hosts &&
          http_method == o.http_method &&
          invalid_http_status_code == o.invalid_http_status_code &&
          request_headers == o.request_headers &&
          timeout_seconds == o.timeout_seconds &&
          type == o.type &&
          valid_http_status_code == o.valid_http_status_code &&
          additional_properties == o.additional_properties
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [endpoint, hosts, http_method, invalid_http_status_code, request_headers, timeout_seconds, type, valid_http_status_code, additional_properties].hash
    end
  end
end

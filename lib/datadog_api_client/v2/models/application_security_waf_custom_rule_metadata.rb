=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # Metadata associated with the WAF Custom Rule.
  class ApplicationSecurityWafCustomRuleMetadata
    include BaseGenericModel
    # The date and time the WAF custom rule was created.
    attr_accessor :added_at
    # The handle of the user who created the WAF custom rule.
    attr_accessor :added_by
    # The name of the user who created the WAF custom rule.
    attr_accessor :added_by_name
    # The date and time the WAF custom rule was last updated.
    attr_accessor :modified_at
    # The handle of the user who last updated the WAF custom rule.
    attr_accessor :modified_by
    # The name of the user who last updated the WAF custom rule.
    attr_accessor :modified_by_name

    attr_accessor :additional_properties

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'added_at' => :'added_at',
        :'added_by' => :'added_by',
        :'added_by_name' => :'added_by_name',
        :'modified_at' => :'modified_at',
        :'modified_by' => :'modified_by',
        :'modified_by_name' => :'modified_by_name'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'added_at' => :'Time',
        :'added_by' => :'String',
        :'added_by_name' => :'String',
        :'modified_at' => :'Time',
        :'modified_by' => :'String',
        :'modified_by_name' => :'String'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V2::ApplicationSecurityWafCustomRuleMetadata` initialize method"
      end

      self.additional_properties = {}
      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          self.additional_properties[k.to_sym] = v
        else
          h[k.to_sym] = v
        end
      }

      if attributes.key?(:'added_at')
        self.added_at = attributes[:'added_at']
      end

      if attributes.key?(:'added_by')
        self.added_by = attributes[:'added_by']
      end

      if attributes.key?(:'added_by_name')
        self.added_by_name = attributes[:'added_by_name']
      end

      if attributes.key?(:'modified_at')
        self.modified_at = attributes[:'modified_at']
      end

      if attributes.key?(:'modified_by')
        self.modified_by = attributes[:'modified_by']
      end

      if attributes.key?(:'modified_by_name')
        self.modified_by_name = attributes[:'modified_by_name']
      end
    end

    # Returns the object in the form of hash, with additionalProperties support.
    # @return [Hash] Returns the object in the form of hash
    # @!visibility private
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      self.additional_properties.each_pair do |attr, value|
        hash[attr] = value
      end
      hash
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          added_at == o.added_at &&
          added_by == o.added_by &&
          added_by_name == o.added_by_name &&
          modified_at == o.modified_at &&
          modified_by == o.modified_by &&
          modified_by_name == o.modified_by_name &&
          additional_properties == o.additional_properties
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [added_at, added_by, added_by_name, modified_at, modified_by, modified_by_name, additional_properties].hash
    end
  end
end

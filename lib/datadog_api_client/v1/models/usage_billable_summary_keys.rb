=begin
#Datadog API V1 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V1
  # Response with aggregated usage types.
  class UsageBillableSummaryKeys
    include BaseGenericModel

    # Whether the object has unparsed attributes
    # @!visibility private
    attr_accessor :_unparsed

    # Response with properties for each aggregated usage type.
    attr_accessor :apm_host_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :apm_host_top99p

    # Response with properties for each aggregated usage type.
    attr_accessor :apm_trace_search_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :fargate_container_average

    # Response with properties for each aggregated usage type.
    attr_accessor :infra_container_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :infra_host_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :infra_host_top99p

    # Response with properties for each aggregated usage type.
    attr_accessor :iot_top99p

    # Response with properties for each aggregated usage type.
    attr_accessor :lambda_function_average

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_15day_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_180day_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_30day_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_3day_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_45day_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_60day_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_7day_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_90day_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_custom_retention_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_indexed_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :logs_ingested_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :network_device_top99p

    # Response with properties for each aggregated usage type.
    attr_accessor :npm_flow_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :npm_host_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :npm_host_top99p

    # Response with properties for each aggregated usage type.
    attr_accessor :prof_container_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :prof_host_top99p

    # Response with properties for each aggregated usage type.
    attr_accessor :rum_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :serverless_invocation_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :siem_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :synthetics_api_tests_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :synthetics_browser_checks_sum

    # Response with properties for each aggregated usage type.
    attr_accessor :timeseries_average

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'apm_host_sum' => :'apm_host_sum',
        :'apm_host_top99p' => :'apm_host_top99p',
        :'apm_trace_search_sum' => :'apm_trace_search_sum',
        :'fargate_container_average' => :'fargate_container_average',
        :'infra_container_sum' => :'infra_container_sum',
        :'infra_host_sum' => :'infra_host_sum',
        :'infra_host_top99p' => :'infra_host_top99p',
        :'iot_top99p' => :'iot_top99p',
        :'lambda_function_average' => :'lambda_function_average',
        :'logs_indexed_15day_sum' => :'logs_indexed_15day_sum',
        :'logs_indexed_180day_sum' => :'logs_indexed_180day_sum',
        :'logs_indexed_30day_sum' => :'logs_indexed_30day_sum',
        :'logs_indexed_3day_sum' => :'logs_indexed_3day_sum',
        :'logs_indexed_45day_sum' => :'logs_indexed_45day_sum',
        :'logs_indexed_60day_sum' => :'logs_indexed_60day_sum',
        :'logs_indexed_7day_sum' => :'logs_indexed_7day_sum',
        :'logs_indexed_90day_sum' => :'logs_indexed_90day_sum',
        :'logs_indexed_custom_retention_sum' => :'logs_indexed_custom_retention_sum',
        :'logs_indexed_sum' => :'logs_indexed_sum',
        :'logs_ingested_sum' => :'logs_ingested_sum',
        :'network_device_top99p' => :'network_device_top99p',
        :'npm_flow_sum' => :'npm_flow_sum',
        :'npm_host_sum' => :'npm_host_sum',
        :'npm_host_top99p' => :'npm_host_top99p',
        :'prof_container_sum' => :'prof_container_sum',
        :'prof_host_top99p' => :'prof_host_top99p',
        :'rum_sum' => :'rum_sum',
        :'serverless_invocation_sum' => :'serverless_invocation_sum',
        :'siem_sum' => :'siem_sum',
        :'synthetics_api_tests_sum' => :'synthetics_api_tests_sum',
        :'synthetics_browser_checks_sum' => :'synthetics_browser_checks_sum',
        :'timeseries_average' => :'timeseries_average'
      }
    end

    # Returns all the JSON keys this model knows about
    # @!visibility private
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'apm_host_sum' => :'UsageBillableSummaryBody',
        :'apm_host_top99p' => :'UsageBillableSummaryBody',
        :'apm_trace_search_sum' => :'UsageBillableSummaryBody',
        :'fargate_container_average' => :'UsageBillableSummaryBody',
        :'infra_container_sum' => :'UsageBillableSummaryBody',
        :'infra_host_sum' => :'UsageBillableSummaryBody',
        :'infra_host_top99p' => :'UsageBillableSummaryBody',
        :'iot_top99p' => :'UsageBillableSummaryBody',
        :'lambda_function_average' => :'UsageBillableSummaryBody',
        :'logs_indexed_15day_sum' => :'UsageBillableSummaryBody',
        :'logs_indexed_180day_sum' => :'UsageBillableSummaryBody',
        :'logs_indexed_30day_sum' => :'UsageBillableSummaryBody',
        :'logs_indexed_3day_sum' => :'UsageBillableSummaryBody',
        :'logs_indexed_45day_sum' => :'UsageBillableSummaryBody',
        :'logs_indexed_60day_sum' => :'UsageBillableSummaryBody',
        :'logs_indexed_7day_sum' => :'UsageBillableSummaryBody',
        :'logs_indexed_90day_sum' => :'UsageBillableSummaryBody',
        :'logs_indexed_custom_retention_sum' => :'UsageBillableSummaryBody',
        :'logs_indexed_sum' => :'UsageBillableSummaryBody',
        :'logs_ingested_sum' => :'UsageBillableSummaryBody',
        :'network_device_top99p' => :'UsageBillableSummaryBody',
        :'npm_flow_sum' => :'UsageBillableSummaryBody',
        :'npm_host_sum' => :'UsageBillableSummaryBody',
        :'npm_host_top99p' => :'UsageBillableSummaryBody',
        :'prof_container_sum' => :'UsageBillableSummaryBody',
        :'prof_host_top99p' => :'UsageBillableSummaryBody',
        :'rum_sum' => :'UsageBillableSummaryBody',
        :'serverless_invocation_sum' => :'UsageBillableSummaryBody',
        :'siem_sum' => :'UsageBillableSummaryBody',
        :'synthetics_api_tests_sum' => :'UsageBillableSummaryBody',
        :'synthetics_browser_checks_sum' => :'UsageBillableSummaryBody',
        :'timeseries_average' => :'UsageBillableSummaryBody'
      }
    end

    # List of attributes with nullable: true
    # @!visibility private
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V1::UsageBillableSummaryKeys` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `DatadogAPIClient::V1::UsageBillableSummaryKeys`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'apm_host_sum')
        self.apm_host_sum = attributes[:'apm_host_sum']
      end

      if attributes.key?(:'apm_host_top99p')
        self.apm_host_top99p = attributes[:'apm_host_top99p']
      end

      if attributes.key?(:'apm_trace_search_sum')
        self.apm_trace_search_sum = attributes[:'apm_trace_search_sum']
      end

      if attributes.key?(:'fargate_container_average')
        self.fargate_container_average = attributes[:'fargate_container_average']
      end

      if attributes.key?(:'infra_container_sum')
        self.infra_container_sum = attributes[:'infra_container_sum']
      end

      if attributes.key?(:'infra_host_sum')
        self.infra_host_sum = attributes[:'infra_host_sum']
      end

      if attributes.key?(:'infra_host_top99p')
        self.infra_host_top99p = attributes[:'infra_host_top99p']
      end

      if attributes.key?(:'iot_top99p')
        self.iot_top99p = attributes[:'iot_top99p']
      end

      if attributes.key?(:'lambda_function_average')
        self.lambda_function_average = attributes[:'lambda_function_average']
      end

      if attributes.key?(:'logs_indexed_15day_sum')
        self.logs_indexed_15day_sum = attributes[:'logs_indexed_15day_sum']
      end

      if attributes.key?(:'logs_indexed_180day_sum')
        self.logs_indexed_180day_sum = attributes[:'logs_indexed_180day_sum']
      end

      if attributes.key?(:'logs_indexed_30day_sum')
        self.logs_indexed_30day_sum = attributes[:'logs_indexed_30day_sum']
      end

      if attributes.key?(:'logs_indexed_3day_sum')
        self.logs_indexed_3day_sum = attributes[:'logs_indexed_3day_sum']
      end

      if attributes.key?(:'logs_indexed_45day_sum')
        self.logs_indexed_45day_sum = attributes[:'logs_indexed_45day_sum']
      end

      if attributes.key?(:'logs_indexed_60day_sum')
        self.logs_indexed_60day_sum = attributes[:'logs_indexed_60day_sum']
      end

      if attributes.key?(:'logs_indexed_7day_sum')
        self.logs_indexed_7day_sum = attributes[:'logs_indexed_7day_sum']
      end

      if attributes.key?(:'logs_indexed_90day_sum')
        self.logs_indexed_90day_sum = attributes[:'logs_indexed_90day_sum']
      end

      if attributes.key?(:'logs_indexed_custom_retention_sum')
        self.logs_indexed_custom_retention_sum = attributes[:'logs_indexed_custom_retention_sum']
      end

      if attributes.key?(:'logs_indexed_sum')
        self.logs_indexed_sum = attributes[:'logs_indexed_sum']
      end

      if attributes.key?(:'logs_ingested_sum')
        self.logs_ingested_sum = attributes[:'logs_ingested_sum']
      end

      if attributes.key?(:'network_device_top99p')
        self.network_device_top99p = attributes[:'network_device_top99p']
      end

      if attributes.key?(:'npm_flow_sum')
        self.npm_flow_sum = attributes[:'npm_flow_sum']
      end

      if attributes.key?(:'npm_host_sum')
        self.npm_host_sum = attributes[:'npm_host_sum']
      end

      if attributes.key?(:'npm_host_top99p')
        self.npm_host_top99p = attributes[:'npm_host_top99p']
      end

      if attributes.key?(:'prof_container_sum')
        self.prof_container_sum = attributes[:'prof_container_sum']
      end

      if attributes.key?(:'prof_host_top99p')
        self.prof_host_top99p = attributes[:'prof_host_top99p']
      end

      if attributes.key?(:'rum_sum')
        self.rum_sum = attributes[:'rum_sum']
      end

      if attributes.key?(:'serverless_invocation_sum')
        self.serverless_invocation_sum = attributes[:'serverless_invocation_sum']
      end

      if attributes.key?(:'siem_sum')
        self.siem_sum = attributes[:'siem_sum']
      end

      if attributes.key?(:'synthetics_api_tests_sum')
        self.synthetics_api_tests_sum = attributes[:'synthetics_api_tests_sum']
      end

      if attributes.key?(:'synthetics_browser_checks_sum')
        self.synthetics_browser_checks_sum = attributes[:'synthetics_browser_checks_sum']
      end

      if attributes.key?(:'timeseries_average')
        self.timeseries_average = attributes[:'timeseries_average']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    # @!visibility private
    def list_invalid_properties
      invalid_properties = Array.new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    # @!visibility private
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          apm_host_sum == o.apm_host_sum &&
          apm_host_top99p == o.apm_host_top99p &&
          apm_trace_search_sum == o.apm_trace_search_sum &&
          fargate_container_average == o.fargate_container_average &&
          infra_container_sum == o.infra_container_sum &&
          infra_host_sum == o.infra_host_sum &&
          infra_host_top99p == o.infra_host_top99p &&
          iot_top99p == o.iot_top99p &&
          lambda_function_average == o.lambda_function_average &&
          logs_indexed_15day_sum == o.logs_indexed_15day_sum &&
          logs_indexed_180day_sum == o.logs_indexed_180day_sum &&
          logs_indexed_30day_sum == o.logs_indexed_30day_sum &&
          logs_indexed_3day_sum == o.logs_indexed_3day_sum &&
          logs_indexed_45day_sum == o.logs_indexed_45day_sum &&
          logs_indexed_60day_sum == o.logs_indexed_60day_sum &&
          logs_indexed_7day_sum == o.logs_indexed_7day_sum &&
          logs_indexed_90day_sum == o.logs_indexed_90day_sum &&
          logs_indexed_custom_retention_sum == o.logs_indexed_custom_retention_sum &&
          logs_indexed_sum == o.logs_indexed_sum &&
          logs_ingested_sum == o.logs_ingested_sum &&
          network_device_top99p == o.network_device_top99p &&
          npm_flow_sum == o.npm_flow_sum &&
          npm_host_sum == o.npm_host_sum &&
          npm_host_top99p == o.npm_host_top99p &&
          prof_container_sum == o.prof_container_sum &&
          prof_host_top99p == o.prof_host_top99p &&
          rum_sum == o.rum_sum &&
          serverless_invocation_sum == o.serverless_invocation_sum &&
          siem_sum == o.siem_sum &&
          synthetics_api_tests_sum == o.synthetics_api_tests_sum &&
          synthetics_browser_checks_sum == o.synthetics_browser_checks_sum &&
          timeseries_average == o.timeseries_average
    end

    # @see the `==` method
    # @param o [Object] Object to be compared
    # @!visibility private
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [apm_host_sum, apm_host_top99p, apm_trace_search_sum, fargate_container_average, infra_container_sum, infra_host_sum, infra_host_top99p, iot_top99p, lambda_function_average, logs_indexed_15day_sum, logs_indexed_180day_sum, logs_indexed_30day_sum, logs_indexed_3day_sum, logs_indexed_45day_sum, logs_indexed_60day_sum, logs_indexed_7day_sum, logs_indexed_90day_sum, logs_indexed_custom_retention_sum, logs_indexed_sum, logs_ingested_sum, network_device_top99p, npm_flow_sum, npm_host_sum, npm_host_top99p, prof_container_sum, prof_host_top99p, rum_sum, serverless_invocation_sum, siem_sum, synthetics_api_tests_sum, synthetics_browser_checks_sum, timeseries_average].hash
    end
  end
end

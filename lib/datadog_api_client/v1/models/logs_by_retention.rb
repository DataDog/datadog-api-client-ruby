=begin
#Datadog API V1 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V1
  # Object containing logs usage data broken down by retention period.
  class LogsByRetention
    include BaseGenericModel

    # Whether the object has unparsed attributes
    # @!visibility private
    attr_accessor :_unparsed

    # Indexed logs usage summary for each organization for each retention period with usage.
    attr_accessor :orgs

    # Aggregated index logs usage for each retention period with usage.
    attr_accessor :usage

    # Object containing a summary of indexed logs usage by retention period for a single month.
    attr_accessor :usage_by_month

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'orgs' => :'orgs',
        :'usage' => :'usage',
        :'usage_by_month' => :'usage_by_month'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'orgs' => :'LogsByRetentionOrgs',
        :'usage' => :'Array<LogsRetentionAggSumUsage>',
        :'usage_by_month' => :'LogsByRetentionMonthlyUsage'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `DatadogAPIClient::V1::LogsByRetention` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `DatadogAPIClient::V1::LogsByRetention`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'orgs')
        self.orgs = attributes[:'orgs']
      end

      if attributes.key?(:'usage')
        if (value = attributes[:'usage']).is_a?(Array)
          self.usage = value
        end
      end

      if attributes.key?(:'usage_by_month')
        self.usage_by_month = attributes[:'usage_by_month']
      end
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    # @!visibility private
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param o [Object] Object to be compared
    # @!visibility private
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          orgs == o.orgs &&
          usage == o.usage &&
          usage_by_month == o.usage_by_month
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    # @!visibility private
    def hash
      [orgs, usage, usage_by_month].hash
    end
  end
end
